#ifndef rules_h
#define rules_h

enum ParseType {
    // parse for all Mikropascal non-terminals
	SYSTEM_GOAL,
	PROGRAM,
	PROGRAM_HEADING,
	// the program basically
	BLOCK,
	// variable declaration stuff
	VARIABLE_DECL_PART,
    VARIABLE_DECL_TAIL,
    VARIABLE_DECL,
	TYPE,
	// procedure and function declaration stuff
	PROCEDURE_AND_FUNCTION_DECL_PART,
	PROCEDURE_DECL,
	FUNCTION_DECL,
	PROCEDURE_HEAD,
	FUNCTION_HEAD,
	OPT_FORMAL_PARAM_LIST,
	FORMAL_PARAM_SECTION_TAIL,
	FORMAL_PARAM,
	VALUE_PARAM_SECTION,
	VARIABLE_PARAM_SECTION,
	// parse statements
	STATEMENT_PART,
	COMPOUND_STATEMENT,
	STATEMENT_SEQUENCE,
    STATEMENT_TAIL,
    STATEMENT,
	EMPTY_STATEMENT,
	READ_STATEMENT,
	READ_PARAMETER_TAIL,
	READ_PARAMETER,
	WRITE_STATEMENT,
	WRITE_PARAMETER_TAIL,
	WRITE_PARAMETER,
	ASSIGNMENT_STATEMENT,
	// parse control flow statements
	IF_STATEMENT,
    OPTIONAL_ELSE_PART,
	// parse looping statements
	REPEAT_STATEMENT,
	WHILE_STATEMENT,
	FOR_STATEMENT,
	CONTROL_VARIABLE,
	INITIAL_VALUE,
	STEP_VALUE,
	FINAL_VALUE,
	// parse procedure statements
	PROCEDURE_STATEMENT,
	OPTIONAL_ACTUAL_PARAMETER_LIST,
	ACTUAL_PARAMETER_TAIL,
    ACTUAL_PARAMETER,
	// parse expressions
	EXPRESSION,
	OPTIONAL_RELATIONAL_PART,
	RELATIONAL_OPERATOR,
	SIMPLE_EXPRESSION,
    TERM_TAIL,
	OPTIONAL_SIGN,
    ADDING_OPERATOR,
    TERM,
    FACTOR_TAIL,
    MULTIPLYING_OPERATOR,
    FACTOR,
	// parse identifiers
	PROGRAM_IDENTIFIER,
	VARIABLE_IDENTIFIER,
	PROCEDURE_IDENTIFIER,
	FUNCTION_IDENTFIER,
	BOOLEAN_EXPRESSION,
	ORDINAL_EXPRESSION,
	IDENTFIER_LIST,
    IDENTFIER_TAIL,
	IDENTIFIER,
	// parse end of file
	EOF_RULE,
	NO_RULE
};

#endif
